#!/usr/bin/env bash
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
###############################
#
# 数据表结构导出备份工具脚本，
# 功能：
#  1. 导出指定类型数据库的表结构
#  2. 关闭指定导出操作运行的服务
#  3. 查看某操作的运行状态
#  4. 查看示例
#  5. 查看当前项目版本
#  6. 解析 hfile 为 json 文件
#  7. 导出 HBase 表结构
#  8. 导出 Hive 表结构
#  9. 导出 Impala 表结构
#  10. 导出 Kudu 表结构
#  11. 导出 ClickHouse 表结构
#  12. 导出 MySQL 表结构
#  13. 字符加密为密文（用于数据库中敏感信息的加密）
#
# @author Yore Yuen
# @date 2021-07-03
#
read -d '' example_string << EOF
示例:
  1. View the running status of a command
    catalog-tools phoenix status
  2. Manually close the specified service
    catalog-tools phoenix stop

  3. Encrypted string
    catalog-tools enc 123456

  4.1 Output all tables or views
    catalog-tools phoenix /home/user/Phoenix-view-DDL-DATE.sql
  4.2 Output the specified table or view
    catalog-tools phoenix /home/user/Phoenix-view-DDL-DATE.sql T_M_INF_POLICY

  5. Parse hfile to json (hfile_path can be local or hdfs according to 'file.model' in conf/hfile-config.properties)
    catalog-tools hfile /home/user/hfile-kv-DATE.data hfile_path1 hfile_path2 ...

  6. Export HBase table
    catalog-tools hbase /home/user/hbase-table-DDL-DATE.txt
    catalog-tools hbase /home/user/hbase-table-DDL-DATE.txt table_name1 table_name2 ...

  7. Export Hive Table
    catalog-tools hive /home/user/hive-table-DDL-DATE.sql
    catalog-tools hive /home/user/hive-table-DDL-DATE-part0.sql db_name
    catalog-tools hive /home/user/hive-table-DDL-DATE-part1.sql db_name table_name1 table_name2 ...

  8. Export Impala table
    catalog-tools impala /home/user/impala-table-DDL-DATE.sql
    catalog-tools impala /home/user/impala-table-DDL-DATE-part0.sql db_name
    catalog-tools impala /home/user/impala-table-DDL-DATE-part1.sql db_name table_name1 table_name2 ...

  9. Export Kudu table
    catalog-tools kudu /home/user/kudu-table-DDL-DATE.json
    catalog-tools kudu /home/user/kudu-table-DDL-DATE.json table_name1 table_name2 ...

  10. Export ClickHouse table
    catalog-tools clickhouse /home/user/clickhouse-table-DDL-DATE.sql
    catalog-tools clickhouse /home/user/clickhouse-table-DDL-DATE-part0.sql db_name
    catalog-tools clickhouse /home/user/clickhouse-table-DDL-DATE-part1.sql db_name table_name1 table_name2 ...

  11. Export MySQL table
    catalog-tools mysql /home/user/mysql-table-DDL-DATE.sql
    catalog-tools mysql /home/user/mysql-table-DDL-DATE-part0.sql db_name
    catalog-tools mysql /home/user/mysql-table-DDL-DATE-part1.sql db_name table_name1 table_name2 ...

EOF

nowdate=`date '+%Y-%m-%d-%H%M%S'`
example_string=`echo "$example_string" | sed  "s@DATE@${nowdate}@g"`

function f_help() {
  #echo "Usage: catalog-tools [<options>] <command> [<args>]"
  echo "Usage: catalog-tools <type> <outpath|stop|status> [<args>]"
  echo "type: Type of database【required】"
  echo "    demo            View example"
  echo "    help            View help information, which is also equivalent to: --help, -h"
  echo "    version         View version information, which is also equivalent to: -v"
  echo "    enc             Encrypted"
  echo "    phoenix         Output Phoenix tables and views"
  echo "    hfile           Parse HFile data"
  echo "    hbase           Output HBase table"
  echo "    hive            Output Hive library table"
  echo "    impala          Output Impala library table"
  echo "    Kudu            Export Kudu table"
  echo "    clickhouse      Output ClickHouse library table"
  echo "    mysql           Output Mysql library table"
  echo "outpath: Path of output data【Required】"
  echo "stop: Stop the specified running service"
  echo "status: View the running status of the specified service"
  echo "args: Optional parameter, you can specify a specific database name or table name"
  echo ""
  echo "$example_string"
  echo ""
  exit 1
}


if [ $# = 0 ]; then
  f_help
fi

BIN_DIR=`dirname "$0"`
BIN_DIR=`cd "$BIN_DIR">/dev/null; pwd`
TOOLS_HOME=$BIN_DIR/..
HOSTNAME=`hostname`
TYPE=$1
shift
#OUT_PATH=$2
#PARAM_2=$2
TOOLS_CONF_DIR=$TOOLS_HOME/conf
export TOOLS_LIB_JARS=$TOOLS_HOME/lib/*
export HADOOP_USER_NAME=hbase
TOOLS_LOG_DIR=$TOOLS_HOME/logs
TOOLS_PID_DIR=$TOOLS_HOME/pid
log=$TOOLS_LOG_DIR/tools-$TYPE-$HOSTNAME.out
pid=$TOOLS_PID_DIR/tools-$TYPE.pid
JAVA_HOME=$JAVA_HOME
JAVA=$JAVA_HOME/bin/java
STOP_TIMEOUT=5
TODO_GREEN="\033[1;32mTODO\033[0m"
ERROR_RED="\033[1;31m[ERROR]\033[0m"
# JDK8 时必须添加 -noverify。jdk7添加 -XX:-UseSplitVerifier
# 否则可能会报 java.lang.IllegalStateException: Unable to load cache item
TOOLS_OPTS="-Xms4g -Xmx4g -XX:+UseG1GC -noverify $APA_OPTS"

#当日志目录被删除后，不存在时创建
if [ ! -d "$TOOLS_LOG_DIR" ]; then
  mkdir $TOOLS_LOG_DIR
fi
if [ ! -d "$TOOLS_PID_DIR" ]; then
  mkdir $TOOLS_PID_DIR
fi


function f_version() {
  execJarName=`find $TOOLS_HOME/lib -name 'catalog-core-*.jar' | head -1`
  projectVersion=`echo $execJarName|awk -F 'lib/catalog-core-' '{print $2}' |awk -F '.jar' '{print $1}'`
  if [ ! $projectVersion ]; then
    projectVersion="Version 1.0"
  fi
  echo "Version $projectVersion"
}

function f_enc() {
  plaintext=$1
  if [ ! $plaintext ]; then
    echo $ERROR_RED" 参数缺失，请输出待加密的字符串值。可参考如下 3 用法 "
    echo "$example_string"
    exit 1
  fi
  CLASS=yore.common.util.ENC
  exec_command="-classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  $JAVA $exec_command
}

# 执行 Phoenix 服务相关操作
function f_phoenix() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 4 用法 "
    echo "$example_string"
    exit 1
  fi
  #LOG_FILE="-Dlogging.config=classpath:apiserver_logback.xml -Dspring.profiles.active=api"
  #spring_profiles="-Dspring.config.location=$TOOLS_CONF_DIR/application.properties"
  # 通过 JVM 指定 -Dspring.profiles.active=config
  # 通过程序参数指定 --spring.profiles.active=config
  propertiesPath=$TOOLS_CONF_DIR/application.properties
  formatConf=`grep "^catalog.ddl.output.format" $propertiesPath |cut -d= -f 2`
  spring_profiles="-Dspring.profiles.active=phoenix -Dcatalog.ddl.output.format=$formatConf"
  CLASS=yore.phoenix.PhoenixTableSchema
  # shellcheck disable=SC2124
  exec_command="$spring_profiles $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_hfile() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 5 用法 "
    echo "$example_string"
    exit 1
  fi
  HFILE_PATH=$2
  if [ ! $HFILE_PATH ]; then
    echo "[WARN] 将以 $TOOLS_CONF_DIR/HFilePath.properties 中的 hfiles.path 为准，可参考 help 如下 5 用法 "
    echo "$example_string"
  fi
  vm_opts="-Dmy.config.path=$TOOLS_CONF_DIR/hfile-config.properties"
  CLASS=yore.hbase.HfileReader
  # shellcheck disable=SC2124
  exec_command="$vm_opts $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE HFile文件解析, 日志请查看 $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_hbase() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 6 用法 "
    echo "$example_string"
    exit 1
  fi
  CLASS=yore.hbase.HBaseTable
  exec_command="$TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE HFile文件解析, 日志请查看 $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_hive() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 7 用法 "
    echo "$example_string"
    exit 1
  fi
  spring_profiles="-Dspring.profiles.active=hive"
  CLASS=yore.hive.HiveTableSchema
  # shellcheck disable=SC2124
  exec_command="$spring_profiles $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_impala() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 8 用法 "
    echo "$example_string"
    exit 1
  fi
  spring_profiles="-Dspring.profiles.active=impala"
  CLASS=yore.impala.ImpalaTableSchema
  # shellcheck disable=SC2124
  exec_command="$spring_profiles $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_kudu() {
  #echo $TODO_GREEN
  OUT_PATH=$1
  echo "推荐通过 Impala 获取 Kudu 表结构，可参考 8 用法"
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 9 用法 "
    echo "$example_string"
    exit 1
  fi
  vm_opts="-Dsys.config.path=$TOOLS_CONF_DIR/application.properties"
  vm_opts="$vm_opts -Dmy.config.path=$TOOLS_CONF_DIR/kudu-config.properties "
  CLASS=yore.kudu.SchemaExport
  # shellcheck disable=SC2124
  exec_command="$vm_opts $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_clickhouse() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 10 用法 "
    echo "$example_string"
    exit 1
  fi
  spring_profiles="-Dspring.profiles.active=clickhouse"
  CLASS=yore.clickhouse.ClickHouseTableSchema
  # shellcheck disable=SC2124
  exec_command="$spring_profiles $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

function f_mysql() {
  OUT_PATH=$1
  if [ ! $OUT_PATH ]; then
    echo $ERROR_RED" 参数缺失，请指定数据输出的路径，可参考如下 11 用法 "
    echo "$example_string"
    exit 1
  fi
  spring_profiles="-Dspring.profiles.active=mysql"
  CLASS=yore.mysql.MySQLTableSchema
  # shellcheck disable=SC2124
  exec_command="$spring_profiles $TOOLS_OPTS -classpath $TOOLS_CONF_DIR:$TOOLS_LIB_JARS $CLASS $@"
  if [ -f $pid ]; then
    if kill -0 `cat $pid` > /dev/null 2>&1; then
      echo "$TYPE 正在运行，进程 id 为 `cat $pid`，请先关闭此进程服务。"
      exit 1
    fi
  fi
  echo "启动 $TYPE 表结构导出, logging to $log"
  echo "nohup $JAVA $exec_command > $log 2>&1 < /dev/null &"
  nohup $JAVA $exec_command > $log 2>&1 < /dev/null &
  echo $! > $pid
}

# start or stop
function f_startStop() {
  startStop=$1
  case $startStop in
    (status)
      TARGET_PID=`cat $pid`
      state="STOP"
      if [ ! $TARGET_PID ]; then
        # font color - red
        state="\033[1;31m $state \033[0m"
      else
        # 如果 pid 存在，则判断 pid 是否在运行
        serverCount=`ps -ef |grep "$TARGET_PID" |grep -v "grep" |wc -l`
        if [[ $serverCount -gt 0 ]];then
          state="RUNNING"
          # font color - green
          state="\033[1;32m $state \033[0m"
        else
          state="\033[1;31m $state \033[0m"
          mv -f $pid /tmp
        fi
      fi
      echo -e "$TYPE server is $state"
    ;;

    (stop)
      if [ -f $pid ]; then
        TARGET_PID=`cat $pid`
        if kill -0 $TARGET_PID > /dev/null 2>&1; then
          echo "stopping $TYPE server"
          kill $TARGET_PID
          sleep $STOP_TIMEOUT
          if kill -0 $TARGET_PID > /dev/null 2>&1; then
            echo "$TYPE server did not stop gracefully after $STOP_TIMEOUT seconds: killing with kill -9"
            kill -9 $TARGET_PID
          fi
        else
          echo "no $TYPE server to stop"
        fi
        rm -f $pid
      else
        echo "no Server to stop"
      fi
    ;;
    (*)
      echo "目前仅支持 status/stop"
    ;;
  esac
}



if [ "$TYPE" = "version" ] || [ "$TYPE" = "-v" ] ; then
  f_version
elif [ "$TYPE" = "demo" ]; then
  echo "$example_string"
elif [ "$TYPE" = "help" ] || [ "$TYPE" = "--help" ] || [ "$TYPE" = "-h" ]; then
  f_help
elif [ "$TYPE" = "enc" ] ; then
  f_enc "$@"

elif [ "$TYPE" = "phoenix" ] ; then
  # 注意前面的参数1已 shift
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_phoenix "$@"
  fi
elif [ "$TYPE" = "hfile" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_hfile "$@"
  fi
elif [ "$TYPE" = "hbase" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_hbase "$@"
  fi
elif [ "$TYPE" = "hive" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_hive "$@"
  fi
elif [ "$TYPE" = "impala" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_impala "$@"
  fi
elif [ "$TYPE" = "kudu" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_kudu "$@"
  fi
elif [ "$TYPE" = "clickhouse" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_clickhouse "$@"
  fi
elif [ "$TYPE" = "mysql" ]; then
  startStop=$1
  if [ "$startStop" = "status" ] || [ "$startStop" = "stop" ] ; then
    f_startStop $startStop
  else
    f_mysql "$@"
  fi
else
  echo "The $ERROR_RED parameter is wrong, please refer to the following usage:"
  f_help
fi

exit
